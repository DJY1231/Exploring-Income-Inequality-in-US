LLM: ChatGPT-4.
Date: 14 April 2024

User
Create me an R code that displays this chart that indicates income inequality. It should include the social class, year, country, and share of total income.
ChatGPT

Generated by DALL·E
# Load necessary libraries
library(ggplot2)
library(readxl)

# Load the data
file_path <- "path/to/your/WID_Data_11042024-204546.xlsx"
data <- read_excel(file_path)

# Rename the 'Unnamed: 3' column to 'Income Share'
colnames(data)[4] <- "Income Share"

# Plotting the data
ggplot(data, aes(x = Year, y = `Income Share`, color = Social_Class, group = Social_Class)) +
  geom_line() +
  facet_wrap(~Country, scales = 'free_y') +
  labs(title = "Income Share by Social Class Over Time",
       x = "Year",
       y = "Income Share (%)",
       color = "Social Class") +
  theme_minimal()

User
Create me an R code that displays this chart that indicates income inequality. It should include the race, year, country, and median income.
ChatGPT

Generated by DALL·E
# Load necessary libraries
library(readr)
library(ggplot2)
library(dplyr)
library(scales)

# Read the CSV file into an R data frame
income_data <- read_csv("Median_Income_Race.csv")

# Convert Median_Income to a numeric value after removing commas
income_data <- income_data %>%
  mutate(
    Median_Income = as.numeric(gsub(",", "", Median_Income)),
    Year = as.integer(Year)
  )

# Remove rows with NA values in Year or Median_Income
income_data <- na.omit(income_data)

# Order the data by Year
income_data <- income_data %>%
  arrange(Year, Race)

# Generate a sequence of years at 5-year intervals
years_breaks <- seq(from = floor(min(income_data$Year)/5)*5, # Round down to nearest multiple of 5
                    to = ceiling(max(income_data$Year)/5)*5, # Round up to nearest multiple of 5
                    by = 5)

# Create a line chart with years displayed at 5-year intervals
median_income_plot <- ggplot(income_data, aes(x = Year, y = Median_Income, group = Race, color = Race)) +
  geom_line() +
  geom_point() +
  scale_x_continuous(breaks = years_breaks) + # Set x-axis breaks at 5-year intervals
  scale_y_continuous(labels = label_comma()) + # Format y-axis labels to avoid scientific notation
  theme_minimal() +
  labs(title = "Median Income by Race Over the Years",
       x = "Year",
       y = "Median Income (Dollars)",
       color = "Race") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1), # Rotate x-axis labels for readability
        text = element_text(size = 12))

# Print the plot
print(median_income_plot)

# Optionally save the plot to a file
ggsave("median_income_plot.png", median_income_plot, width = 10, height = 8)


User
Create me an R code that displays the summary of my chart using the mutliple linear regression model that I provided.
ChatGPT

Generated by DALL·E
# Load necessary libraries
if (!require(dplyr)) install.packages("dplyr")
if (!require(stargazer)) install.packages("stargazer")
if (!require(performance)) install.packages("performance")

library(dplyr)
library(stargazer)
library(performance)

# Read the dataset
data <- read.csv("Income_inequality_social_class.csv")

# Define the periods based on the year
data <- data %>%
  mutate(Period = case_when(
    Year >= 2002 & Year <= 2007 ~ "Pre-Recession",
    Year > 2007 & Year <= 2009 ~ "During-Recession",
    Year > 2009 & Year <= 2019 ~ "Post-Recession",
    TRUE ~ as.character(NA) # for years outside the specified range
  )) %>%
  mutate(Period = factor(Period))

# Fit the linear regression model with interactions
model <- lm(Share_of_total_income ~ Year + Social_Class + Period + Year:Social_Class + Social_Class:Period, data = data)

# Get the summary of the model
model_summary <- summary(model)

# Calculate RMSE
rmse_value <- rmse(model)

# Create the table with stargazer
stargazer(model, type = "text", 
          add.lines = list(
            c("Num. Obs.", nrow(data)),
            c("RMSE", format(rmse_value, digits=2)),
            c("AIC", format(AIC(model), digits=2)),
            c("BIC", format(BIC(model), digits=2))
          ))
